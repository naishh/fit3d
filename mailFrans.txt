Hoi Frans en Leo,

Hierbij wat eerste resultaten van mijn window detector.
Ik heb verschillende edgedetectors en thresholds 
toegepast op verschillende  
kleurmodelen (RGB, R,G,B, HSV, H,S,V,Prewitt (derivative))
Daarna heb ik de Matlab Houghtransform toegepast.

Hierbij heb ik de Theta interval voor horizontale en verticale lijnen appart ingevoerd.

Omdat ik de hoekpunten van de muur weet heb ik de horizontale lijnen 
een Theta interval gegeven die tussen de stoep en de dakgoot vallen.
De verticale lijnen (groen) mogen max 10 graden afwijken dan een perfect verticale lijn.

Verder heb ik een test gedaan waarbij ik voor horizontale en verticale
Houghtransform een ander edge plaatje mee geef.

Canny met een handmatige threshold en HSV (V kanaal) gaf het mooiste resultaat.

Graag jullie advies voor de volgende stap:
Omdat ik kamp met perspectief zijn de hoeken in het plaatje niet echt 90 graden
en zijn de ramen rechts kleiner dan links. 
De scene is inmiddels gecalibreerd en ik ben in het bezit van het 3D model.
Dus ik kan het perspectief naar vierkant projecteren.
Dit had ik met Frans besproken maar omdat elke pixel moet worden geprojecteerd en geinterpoleerd hebben we besloten dat dit te duur is.
Nu had ik het idee om de projectie alleen voor de Hough lijnen te doen. Dit is veel goedkoper dan voor elke pixel want dit zijn maar twee coordinaten per line segment. Wat vinden jullie hiervan?

Ik kan de projectie op twee manieren doen had ik bedacht:
1) Een affine matrix berekenen door de hoekpunten van de perspectieve muur met een vierkant te vergelijken.
2) Een rotatie matrix berekenen door de hoek te berekenen tussen de kijkrichting en de normaal van de muur 
(axis angle representation)

Het nadeel van muur vierkant maken dat mijn window detector niet zal werken voor ongecalibreerde scenes.
Dan is er verder nog een nadeel van de gehele aanpak en dat is dat het erg afhankelijk is van de edge threshold. Ik heb ergens gelezen dat je een automatische threshold kan berekenen, weten jullie hier iets van?
Nog een heel ander idee is de feature kant op gaan. B.v. een corner detector of een adaboost cascading classifier op onderscheidende features.
En/of idee'en combineren.

Graag jullie advies.

Tjerk
